Parameters:
    DeployBucketName:
        Type: String
    ApplicationName:
        Type: String
    AppPort:
        Type: Number
        Default: 5000
    RedisPort:
        Type: Number
        Default: 6379
    EnvName:
        Type: String
Resources:
    MyDeployBucket:
        Type: AWS::S3::Bucket
        Properties:
            BucketName: !Ref DeployBucketName
    MySecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: "This is a security group"
            SecurityGroupIngress:
                -
                    CidrIp: "0.0.0.0/0"
                    IpProtocol: "tcp"
                    FromPort: !Ref RedisPort
                    ToPort: !Ref RedisPort
    MyCacheSecurityGroup:
        Type: AWS::ElastiCache::SecurityGroup
        Properties:
            Description: "my ElastiCache security group"
    MyCacheSecurityGroupIngress:
        Type: AWS::ElastiCache::SecurityGroupIngress
        DependsOn: MyCacheSecurityGroup
        Properties:
            CacheSecurityGroupName: !Ref MyCacheSecurityGroup
            EC2SecurityGroupName: !Ref MySecurityGroup
    MyRedisCluster:
        Type: AWS::ElastiCache::CacheCluster
        DependsOn:
            - MyCacheSecurityGroup
            - MyCacheSecurityGroupIngress
        Properties:
            Engine: "redis"
            CacheNodeType: "cache.t2.micro"
            NumCacheNodes: 1
            Port: !Ref RedisPort
            CacheSecurityGroupNames:
                - !Ref MyCacheSecurityGroup
    MyApplication:
        Type: AWS::ElasticBeanstalk::Application
        Properties:
            ApplicationName: !Ref ApplicationName
    MyConfigurationTemplate:
        Type: AWS::ElasticBeanstalk::ConfigurationTemplate
        DependsOn:
            - MyApplication
            - MyRedisCluster
            - MySecurityGroup
        Properties:
            ApplicationName: !Ref ApplicationName
            SolutionStackName: "64bit Amazon Linux 2018.03 v2.10.0 running Java 8"
            OptionSettings:
                -
                    Namespace: "aws:elasticbeanstalk:application:environment"
                    OptionName: "PORT"
                    Value: !Ref AppPort
                -
                    Namespace: "aws:elasticbeanstalk:application:environment"
                    OptionName: "REDIS_ADDR"
                    Value: !GetAtt MyRedisCluster.RedisEndpoint.Address
                -
                    Namespace: "aws:elasticbeanstalk:application:environment"
                    OptionName: "REDIS_PORT"
                    Value: !GetAtt MyRedisCluster.RedisEndpoint.Port
                -
                    Namespace: "aws:autoscaling:launchconfiguration"
                    OptionName: "SecurityGroups"
                    Value: !Sub '${MySecurityGroup}'
    MyAppEnv:
        Type: AWS::ElasticBeanstalk::Environment
        Properties:
            ApplicationName: !Ref ApplicationName
            TemplateName: !Ref MyConfigurationTemplate
            EnvironmentName: !Ref EnvName
